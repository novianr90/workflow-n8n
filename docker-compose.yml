services:
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    volumes:
      - ./n8n_data:/home/node/.n8n
      - ./bootstrap.sh:/docker-entrypoint-init.d/bootstrap.sh
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_SECURE_COOKIE=false
      - TZ=Asia/Jakarta
      - NODE_OPTIONS=--max_old_space_size=300
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - WEBHOOK_URL=http://${N8N_HOST}:${N8N_PORT}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=http
      - N8N_DISABLE_UI=false
      - N8N_METRICS=false
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      - N8N_TEMPLATES_ENABLED=false
    networks:
      - n8n_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "until wget --spider -q http://localhost:5678; do echo 'n8n not responding yet...'; sleep 5; done"]
      interval: 15s
      timeout: 10s
      retries: 20

  waha:
    image: devlikeapro/waha
    container_name: waha
    networks:
      - n8n_network
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:3000/api/sessions || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 3

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    depends_on:
      n8n:
        condition: service_healthy
      waha:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
      - "${N8N_PORT}:5678"
      - "${WAHA_PORT}:3000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-auth/.htpasswd:/etc/nginx/.htpasswd:ro
    networks:
      - n8n_network
    restart: unless-stopped

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    ports:
      - "${DOZZLE_PORT}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

networks:
  n8n_network:
    driver: bridge
